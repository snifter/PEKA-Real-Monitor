{
	// http://jshint.com/docs/options/

	// == Enforcing options == 
	"bitwise" : true, // Prohibit bitwise operators (&, |, ^, etc.).
	"curly" : true, // Require {} for every new block or scope.
	"eqeqeq" : true, // Require triple equals i.e. `===`.
	"esversion": 6, // ES6 (2015)
	"forin" : true, // Tolerate `for in` loops without `hasOwnPrototype`.
	"freeze": true, // Prohibit overwriting prototypes of native objects such as Array, Date
	"funcscope" : false, // Suppress warnings about declaring variables inside of control structures while accessing them later from the outside.
	"iterator" : false, // Suppress warnings about the __iterator__ property.
	"latedef" : true, // Prohibit variable use before definition.
	"maxcomplexity": 10, // Max cyclomatic compexity per function.
	"maxdepth": 4, // Max depth of nested blocks. 
	"maxerr" : 50, // This options allows you to set the maximum amount of warnings JSHint will produce before giving up. Default is 50.
	"maxparams": 3, // Max number of formal parameters allowed per function.
	"newcap" : true, // Require capitalization of all constructor functions e.g. `new F()`.
	"noarg" : true, // Prohibit use of `arguments.caller` and `arguments.callee`.
	"nocomma": true, // Prohibit use of comma operator.
	"noempty" : true, // Prohibit use of empty blocks.
	"nonbsp": true, // Warn about non-breaking whitespace characters.
	"nonew" : true, // Prohibit use of constructors for side-effects.
	"notypeof": false, // Suppress warnings about invalid typeof operator values.
	"shadow" : "outer", // Suppresses warnings about variable shadowing.
	"singleGroups": true, // Prohibits the use of the grouping operator when it is not strictly required.
	"strict" : false, // Require `use strict` pragma in every file.
	"undef" : true, // Require all non-global variables be declared before they are used.
	"unused": true, // Warns when you define and never use your variables.
	"varstmt": true, // Use of VariableStatements are forbidden (use let or const instead).
	"trailing" : true, // Prohibit trailing whitespaces.
	
	// == Relaxing Options ==
	"asi" : false, // Suppresses warnings about missing semicolons.
	"boss" : false, //  suppresses warnings about the use of assignments in cases where comparisons are expected.
	"debug" : false, // Suppresses warnings about the debugger statements in your code.
	"eqnull" : false, //S uppresses warnings about == null comparisons.
	"evil" : false, // Suppresses warnings about the use of eval.
	"expr" : false, // Suppresses warnings about the use of expressions where normally you would expect to see assignments or function calls.
	"lastsemic" : true, // Suppresses warnings about missing semicolons, but only when the semicolon is omitted for the last statement in a one-line block.
	"loopfunc" : false, // Suppresses warnings about functions inside of loops.
	"noyield": false, // Suppresses warnings about generator functions with no yield statement in them.
	"plusplus": false, // Prohibits the use of unary increment and decrement operators.
	"proto" : false, // Suppresses warnings about the __proto__ property.
	"scripturl" : false, // Suppresses warnings about the use of script-targeted URLsâ€”such as javascript:...
	"supernew" : false, // Tolerate `new function () { ... };` and `new Object;`.
	"validthis" : false, // Tolerate strict violations when the code is running in strict mode and you use this in a non-constructor function.
	"withstmt": false, // Suppresses warnings about the use of the with statement.
	
	// == Environments ==
	"browser" : false, // Standard browser globals e.g. `window`, `document`.
	"couch" : false, // Enable globals exposed by CouchDB.
	"devel" : false, // Allow development statements e.g. `console.log();`.
	"dojo" : false, // Enable globals exposed by Dojo Toolkit.
	"jasmine": false, // Enable globals exposed by the Jasmine unit testing framework.
	"jquery" : false, // Enable globals exposed by jQuery JavaScript library.
	"mocha": false, // Enable globals exposed by the "BDD" and "TDD" UIs of the Mocha unit testing framework.
	"module": false, // ECMAScript 6 module.
	"mootools" : false, // Enable globals exposed by MooTools JavaScript framework.
	"node" : true, // Enable globals available when code is running inside of the NodeJS runtime environment.
	"nonstandard" : false, // Define non-standard but widely adopted globals such as escape and unescape.
	"phantom" : false, //This option defines globals available when your core is running inside of the PhantomJS runtime environment.
	"prototypejs" : false, // Enable globals exposed by Prototype JavaScript framework.
	"rhino" : false, // Enable globals available when your code is running inside of the Rhino runtime environment.
	"shelljs": false, // Enable globals exposed by the ShellJS library.
	"typed": false, // Enable globals for typed array constructors.
	"worker" : false, // This option defines globals available when your code is running inside of a Web Worker.
	"wsh" : false, // Enable globals available when your code is running as a script for the Windows Script Host.
	"yui" : false // This option defines globals exposed by the YUI JavaScript framework.
}
